
===========================================
ðŸ§  Notes on `title` Metadata in Next.js App Router
===========================================

The `title` field in Next.js metadata sets the page title shown in the browser tab.

You can use it in two ways:

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ”¹ 1. As a String
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

ðŸ‘‰ Use this when you want a static title.

âœ… Example:

```tsx
// app/about/page.tsx

import { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'About Us',
};
```

ðŸ’¡ This will simply set the page title to "About Us".


â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ”¹ 2. As an Object
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

ðŸ‘‰ Use this when you want more control over the title structure, such as templating.

âœ… Example:

```tsx
// app/layout.tsx

import { Metadata } from 'next';

export const metadata: Metadata = {
  title: {
    default: 'My Website',
    template: '%s | My Website',
  },
};
```

ðŸ’¡ In this case:
- If a page provides `title: "About"`, the full title becomes: `About | My Website`
- If no specific title is provided, it falls back to `default: "My Website"`


â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“Œ When to Use What?
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ”¸ Use `string` when you just want a fixed title for a page.
ðŸ”¸ Use `object` when you want dynamic title formatting using templates.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“š Summary
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
âœ… `title: 'Home'` â†’ Just a plain title
âœ… `title: { default: 'App', template: '%s | App' }` â†’ For templated dynamic titles

ðŸŽ¯ Works perfectly when paired with static or dynamic metadata declarations.

