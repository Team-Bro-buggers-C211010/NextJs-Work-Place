## Server and client composition patterns

=> Server components

- fetching data
- accessing backend resources directly
- keeping sensitive information (like access tokens and API keys) secure on the
server
- handling large dependencies server-side - which means less JavaScript for
your users to download

=> Client components

- adding interactivity
- handling event listeners (like onClick(), onChange(), etc.)
- managing state and lifecycle effects (using hooks like useState(),
useReducer(), useEffect())
- working with browser-specific APIs
- implementing custom hooks
- Using React class components



# Server-only code

Some code is specifically designed to run exclusively on the server

Think about modules or functions that work with multiple libraries, handle
environment variables, communicate directly with databases, or process sensitive
information

Since JavaScript modules can be shared between Server and Client Components,
code meant for the server could accidentally find its way to the client

This is bad news as it can bloat your JavaScript bundle, expose your secret keys,
database queries, and sensitive business logic.

=> server-only package (solution)

- Throws a build-time error if someone accidentally imports server code into a Client
Component

Ex.: "src/utils/server-utils.ts":

"import "server-only";

export const serverSideFunction = () => {
    console.log(
        `user multiple libraries,
        use environmental variables,
        interact with a database,
        process confidential information`
    );
    return "Server-side function executed";
}"


and in "app/client-route":

""use client";

import { serverSideFunction } from "@/utils/server-utils";

export default function ClientRoute() {
    const result = serverSideFunction();
    return (
        <div>
            <h1>Client Route {result}</h1>
        </div>
    );
}"


Here we try to import server file in client component. With out "server-only" packages it doesn't prevent to access it. But using this package this ser5ver file only can access in server component.