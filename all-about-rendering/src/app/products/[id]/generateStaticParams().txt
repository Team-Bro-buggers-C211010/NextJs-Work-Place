generateStaticParams()

generateStaticParams is a function that (SSG)

- works alongside dynamic route segments
- to generate static routes during build time
- instead of on demand at request time
- giving us a nice performance boost

Multiple dynamic route segments

Suppose we have a product catalog with categories and products

/products/[category]/[product]/page.tsx

export async function generateStaticParams () {
return [
{ category: "electronics", product: "smartphone" },
{ category: "electronics", product: "laptop" },
{ category: "books", product: "science-fiction" },
{ category: "books", product: "biography" },
]

## dynamicParams

Control what happens when a dynamic segment is visited that was not generated
with generateStaticParams()

true - Next.js will statically render pages on demand for any dynamic segments
not included in generateStaticParams()

false - Next.js will return a 404 error for any dynamic segments not included in our
pre-rendered list

Ex.: we add "export async function generateStaticParams() {
    return [
        { id: "1" },
        { id: "2" },
        { id: "3" }
    ];
}" in products/[id]/page.tsx

Now if we try to access to "/products/4", its render in runtime, and create 4.html in build file.

Because by default dynamicParams = true;

We set it false by, export const dynamicParams = false;

======================================
=> true:

If you're building an e-commerce site, you'll probably want to keep dynamicParams set to
true

This way, you can pre-render your most popular product pages for better performance,
but still allow access to all your other products - they'll just be rendered on demand

=> false:

if you're working with something like a blog where you have a smaller, more fixed
number of pages, you can pre-render all of them and set dynamicParams to false

If someone tries to access a blog post that doesn't exist, they'll get a clean 404 error
instead of waiting for a page that will never exist
======================================